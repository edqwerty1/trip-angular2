{"version":3,"sources":["location-store.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;YAQA;gBAOI,YAAoB,KAAW;oBAAX,UAAK,GAAL,KAAK,CAAM;oBAC3B,IAAI,CAAC,UAAU,GAAG,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;oBAEpC,IAAI,CAAC,UAAU,GAAG,IAAI,eAAU,CAAC,QAAQ,IAAI,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC;yBAC3E,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;yBACpC,KAAK,EAAE,CAAC;gBACjB,CAAC;;gBAED,aAAa;oBACT,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,+BAA+B,CAAC;yBAC1C,GAAG,CAAC,CAAC,GAAa,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC;yBAClC,SAAS,CAAC,IAAI;wBACX,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;wBAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;oBAC5D,CAAC,EACD,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAC1B,CAAC;gBACV,CAAC;;YAIL,CAAC;YA7BD;gBAAC,iBAAU,EAAE;;oCAAA;YACb,uDA4BC,CAAA","file":"location-store.service.js","sourcesContent":["import {ILocations, ILocation} from './models/locations';\r\nimport { Injectable } from '@angular/core';\r\nimport {Http, Response, Headers} from '@angular/http';\r\nimport {Observable, Observer} from 'rxjs/RX';\r\nimport 'rxjs/add/operator/share';\r\nimport 'rxjs/add/operator/startWith';\r\n\r\n@Injectable()\r\nexport class LocationStoreService {\r\n    locations$: Observable<ILocation[]>;\r\n    private _locationsObserver: Observer<ILocation[]>;\r\n    private _dataStore: {\r\n        locations: ILocation[];\r\n    };\r\n\r\n    constructor(private _http: Http) {\r\n        this._dataStore = { locations: [] };\r\n\r\n        this.locations$ = new Observable(observer => this._locationsObserver = observer)\r\n            .startWith(this._dataStore.locations)\r\n            .share();\r\n    };\r\n\r\n    loadLocations() {\r\n        this._http.get('/app/test-data/locations.json')\r\n            .map((res: Response) => res.json())\r\n            .subscribe(data => {\r\n                this._dataStore.locations = data.locations;\r\n                this._locationsObserver.next(this._dataStore.locations);\r\n            },\r\n            error => console.log(error)\r\n            );\r\n    };\r\n\r\n    \r\n\r\n}\r\n"],"sourceRoot":"/source/"}