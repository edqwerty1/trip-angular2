{"version":3,"sources":["location-store.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;YAQA;gBAOI,YAAoB,KAAW;oBAAX,UAAK,GAAL,KAAK,CAAM;oBAC3B,IAAI,CAAC,UAAU,GAAG,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;oBAEpC,IAAI,CAAC,UAAU,GAAG,IAAI,eAAU,CAAC,QAAQ,IAAI,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC;yBAC3E,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;yBACpC,KAAK,EAAE,CAAC;gBACjB,CAAC;;gBAED,aAAa;oBACT,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,+BAA+B,CAAC;yBAC1C,GAAG,CAAC,CAAC,GAAa,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC;yBAClC,SAAS,CAAC,IAAI;wBACX,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;wBAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;oBAC5D,CAAC,EACD,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAC1B,CAAC;gBACV,CAAC;;YAIL,CAAC;YA7BD;gBAAC,iBAAU,EAAE;;oCAAA;YACb,uDA4BC,CAAA","file":"location-store.service.js","sourcesContent":["import {ILocations, ILocation} from './models/locations';\nimport { Injectable } from '@angular/core';\nimport {Http, Response, Headers} from '@angular/http';\nimport {Observable, Observer} from 'rxjs/RX';\nimport 'rxjs/add/operator/share';\nimport 'rxjs/add/operator/startWith';\n\n@Injectable()\nexport class LocationStoreService {\n    locations$: Observable<ILocation[]>;\n    private _locationsObserver: Observer<ILocation[]>;\n    private _dataStore: {\n        locations: ILocation[];\n    };\n\n    constructor(private _http: Http) {\n        this._dataStore = { locations: [] };\n\n        this.locations$ = new Observable(observer => this._locationsObserver = observer)\n            .startWith(this._dataStore.locations)\n            .share();\n    };\n\n    loadLocations() {\n        this._http.get('/app/test-data/locations.json')\n            .map((res: Response) => res.json())\n            .subscribe(data => {\n                this._dataStore.locations = data.locations;\n                this._locationsObserver.next(this._dataStore.locations);\n            },\n            error => console.log(error)\n            );\n    };\n\n    \n\n}\n"],"sourceRoot":"/source/"}