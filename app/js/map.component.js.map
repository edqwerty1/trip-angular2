{"version":3,"sources":["map.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YAWA;gBAII,sBAAoB,WAAuB,EAAU,cAAoC;oBAArE,gBAAW,GAAX,WAAW,CAAY;oBAAU,mBAAc,GAAd,cAAc,CAAsB;gBAEzF,CAAC;gBAED,+BAAQ,GAAR;oBAAA,iBAkDC;oBAjDG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;oBAChD,IAAI,GAAG,CAAC;oBACR,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,UAAC,OAAO;wBAClC,KAAI,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;4BAC7D,MAAM,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE;4BAClC,IAAI,EAAE,CAAC;yBACV,CAAC,CAAC;wBAEH,IAAI,QAAQ,GAAG,IAAI,OAAO,CAAC,QAAQ,EAAE,CAAC;wBACtC,KAAI,CAAC,SAAS,CAAC,SAAS,CAAC,UAAA,SAAS;4BAC9B;gCACI,EAAE,CAAC,CAAC,SAAS,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oCAChC,IAAI,UAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;oCAE9B,QAAQ,CAAC,OAAO,CAAC,EAAE,SAAS,EAAK,UAAQ,CAAC,OAAO,CAAC,QAAQ,UAAK,UAAQ,CAAC,OAAO,CAAC,QAAU,EAAE,EAAE,UAAC,OAAO,EAAE,MAAM;wCAC1G,EAAE,CAAC,CAAC,MAAM,KAAK,OAAO,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;4CAEvC,IAAI,aAAa,GAAG,8EAEd,UAAQ,CAAC,IAAI,8DACP,UAAQ,CAAC,KAAK,yDACd,UAAQ,CAAC,MAAM,6CACxB,CAAC;4CACJ,IAAI,YAAU,GAAG,IAAI,OAAO,CAAC,UAAU,CAAC;gDACpC,OAAO,EAAE,aAAa;gDACtB,QAAQ,EAAE,GAAG;6CAChB,CAAC,CAAC;4CAEH,IAAI,QAAM,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC;gDAC5B,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ;gDACtC,GAAG,EAAE,KAAI,CAAC,GAAG;gDACb,KAAK,EAAE,UAAQ,CAAC,IAAI;6CACvB,CAAC,CAAC;4CACH,QAAM,CAAC,WAAW,CAAC,OAAO,EAAE;gDACxB,YAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,QAAM,CAAC,CAAC;4CACtC,CAAC,CAAC,CAAC;4CACH,YAAU,CAAC,IAAI,CAAC,KAAI,CAAC,GAAG,EAAE,QAAM,CAAC,CAAC;wCAEtC,CAAC;wCAAC,IAAI,CAAC,CAAC;4CACJ,KAAK,CAAC,uDAAuD,GAAG,MAAM,CAAC,CAAC;wCAC5E,CAAC;oCACL,CAAC,CAAC,CAAC;gCACP,CAAC;;4BAhCL,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,SAAS,CAAC;;6BAiCzB;wBACL,CAAC,CACA,CAAC;wBAEF,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;oBACxC,CAAC,CAAC,CAAC;gBACP,CAAC;gBAED,sCAAe,GAAf;oBAEI,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;gBAElC,CAAC;gBAtEL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,MAAM;wBAChB,WAAW,EAAE,wBAAwB;wBACrC,UAAU,EAAE,EAAE;wBACd,MAAM,EAAE,CAAC,wBAAwB,CAAC;qBACrC,CAAC;;gCAAA;gBAkEF,mBAAC;YAAD,CAjEA,AAiEC,IAAA;YAjED,uCAiEC,CAAA","file":"map.component.js","sourcesContent":["import { Component, AfterViewInit, OnInit } from '@angular/core';\r\nimport {Observable} from 'rxjs/RX';\r\nimport {MapService} from './map.service';\r\nimport {LocationStoreService} from './location-store.service';\r\nimport {ILocation} from './models/locations';\r\n@Component({\r\n    selector: 'maps',\r\n    templateUrl: 'app/map.component.html',\r\n    directives: [],\r\n    styles: ['#map { height: 100%; }']\r\n})\r\nexport class MapComponent implements AfterViewInit, OnInit {\r\n    map;\r\n    locations: Observable<ILocation[]>;\r\n\r\n    constructor(private _mapService: MapService, private _locationStore: LocationStoreService) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.locations = this._locationStore.locations$;\r\n        var map;\r\n        this._mapService.loadAPI.then((mapsAPi) => {\r\n            this.map = map = new mapsAPi.Map(document.getElementById('map'), {\r\n                center: { lat: 52.12, lng: -1.24 },\r\n                zoom: 8\r\n            });\r\n\r\n            var geocoder = new mapsAPi.Geocoder();\r\n            this.locations.subscribe(locations => {\r\n                for (let loc in locations) {\r\n                    if (locations.hasOwnProperty(loc)) {\r\n                        let location = locations[loc];\r\n\r\n                        geocoder.geocode({ 'address': `${location.address.address1}, ${location.address.postCode}` }, (results, status) => {\r\n                            if (status === mapsAPi.GeocoderStatus.OK) {\r\n\r\n                                let contentString = `\r\n                            <div>\r\n                                <h3>${location.name}</h3>\r\n                                <p>Price Â£${location.price}}</p>\r\n                                <p>Nights ${location.nights}</p>\r\n                            </div>`;\r\n                                let infowindow = new mapsAPi.InfoWindow({\r\n                                    content: contentString,\r\n                                    maxWidth: 200\r\n                                });\r\n\r\n                                let marker = new mapsAPi.Marker({\r\n                                    position: results[0].geometry.location,\r\n                                    map: this.map,\r\n                                    title: location.name\r\n                                });\r\n                                marker.addListener('click', function() {\r\n                                    infowindow.open(this.map, marker);\r\n                                });\r\n                                infowindow.open(this.map, marker);\r\n\r\n                            } else {\r\n                                alert('Geocode was not successful for the following reason: ' + status);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            );\r\n\r\n            this._locationStore.loadLocations();\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n        this._mapService.initialise();\r\n\r\n    }\r\n}"],"sourceRoot":"/source/"}