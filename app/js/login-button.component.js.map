{"version":3,"sources":["login-button.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAYA;gBASI,8BAAoB,YAA8B,EAAU,YAAyB;oBAAjE,iBAAY,GAAZ,YAAY,CAAkB;oBAAU,iBAAY,GAAZ,YAAY,CAAa;oBAPrF,cAAS,GAAG,KAAK,CAAC;oBAKlB,iBAAY,GAAG,QACd,CAAC;oBAEE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;wBAC1C,UAAU,EAAE,CAAC,EAAE,EAAE,mBAAU,CAAC,QAAQ,CAAC;wBACrC,UAAU,EAAE,CAAC,EAAE,EAAE,mBAAU,CAAC,QAAQ,CAAC;qBACxC,CAAC,CAAC;gBACP,CAAC;gBAED,uCAAQ,GAAR;oBAAA,iBAeC;oBAdG,IAAI,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC;oBAC3D,IAAI,YAAY,GAAkB;wBAC9B,QAAQ,EAAE,IAAI;wBACd,QAAQ,EAAE,IAAI;wBACd,QAAQ,EAAE,CAAC;wBACX,OAAO,EAAE,QAAQ,CAAC,cAAc,CAAC,4BAA4B,CAAC;qBAEjE,CAAC;oBACF,IAAI,CAAC,KAAK,GAAG,IAAI,aAAK,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;oBAE7C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;oBACrC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,UAAC,IAAI;wBACtB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBACrB,CAAC,CAAC,CAAA;gBACN,CAAC;gBAED,oCAAK,GAAL;oBACI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;gBACvB,CAAC;gBAED,uCAAQ,GAAR;oBACI,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;oBAClC,GAAG,CAAC,CAAC,IAAI,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC/C,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;oBACxD,CAAC;oBAAA,CAAC;oBAEF,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;wBACzD,IAAI,CAAC,KAAK,EAAE,CAAC;wBACb,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;oBACvB,CAAC;gBACL,CAAC;gBAED,oCAAK,GAAL;oBACI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBACpG,CAAC;gBAnDD;oBAAC,gBAAS,CAAC,YAAY,CAAC;;uEAAA;gBAN5B;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,cAAc;wBACxB,WAAW,EAAE,iCAAiC;wBAC9C,UAAU,EAAE,EAAE;qBACjB,CAAC;;wCAAA;gBAsDF,2BAAC;YAAD,CArDA,AAqDC,IAAA;YArDD,uDAqDC,CAAA","file":"login-button.component.js","sourcesContent":["import { Component, ViewChild, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/common';\r\nimport {UserStoreService} from './user.service';\r\nimport {Observable} from 'rxjs/RX';\r\nimport {IUser} from './models/user';\r\nimport {Modal, IModalOptions} from './modal';\r\n\r\n@Component({\r\n    selector: 'login-button',\r\n    templateUrl: 'app/login-button.component.html',\r\n    directives: []\r\n})\r\nexport class LoginButtonComponent implements OnInit {\r\n    @ViewChild('loginModal')\r\n    submitted = false;\r\n    loginFormModel: any;\r\n    user$: Observable<IUser>;\r\n    user: IUser;\r\n    modal: Modal;\r\n    modalContent = `\r\n    `;\r\n    constructor(private _userService: UserStoreService, private _formBuilder: FormBuilder) {\r\n        this.loginFormModel = this._formBuilder.group({\r\n            'username': ['', Validators.required],\r\n            'password': ['', Validators.required]\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        var newDiv = document.getElementById(\"login-button-modal\");\r\n        var modalOptions: IModalOptions = {\r\n            backdrop: true,\r\n            keyboard: true,\r\n            duration: 0,\r\n            overlay: document.getElementById(\"login-button-modal-overlay\")\r\n            // content: this.modalContent\r\n        };\r\n        this.modal = new Modal(newDiv, modalOptions);\r\n\r\n        this.user$ = this._userService.user$;\r\n        this.user$.subscribe((data) => {\r\n            this.user = data;\r\n        })\r\n    }\r\n\r\n    close() {\r\n        this.modal.close();\r\n    }\r\n\r\n    onSubmit() {\r\n        this.loginFormModel.markAsDirty();\r\n        for (let control in this.loginFormModel.controls) {\r\n            this.loginFormModel.controls[control].markAsDirty();\r\n        };\r\n\r\n        if (this.loginFormModel.dirty && this.loginFormModel.valid) {\r\n            this.login();\r\n            this.modal.close();\r\n        }\r\n    }\r\n\r\n    login() {\r\n        this.submitted = true;\r\n        this._userService.login(this.loginFormModel.value.username, this.loginFormModel.value.password);\r\n    }\r\n}"],"sourceRoot":"/source/"}