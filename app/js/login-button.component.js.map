{"version":3,"sources":["login-button.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAWA;gBAQI,YAAoB,YAA8B,EAAU,YAAyB;oBAAjE,iBAAY,GAAZ,YAAY,CAAkB;oBAAU,iBAAY,GAAZ,YAAY,CAAa;oBALrF,cAAS,GAAG,KAAK,CAAC;oBAMd,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;wBAC1C,UAAU,EAAE,CAAC,EAAE,EAAE,mBAAU,CAAC,QAAQ,CAAC;wBACrC,UAAU,EAAE,CAAC,EAAE,EAAE,mBAAU,CAAC,QAAQ,CAAC;qBACxC,CAAC,CAAC;gBACP,CAAC;gBAED,QAAQ;oBACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;oBACrC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI;wBACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBACrB,CAAC,CAAC,CAAA;gBACN,CAAC;gBAED,KAAK;oBACD,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;gBACvB,CAAC;gBAED,QAAQ;oBACJ,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;oBAClC,GAAG,CAAC,CAAC,IAAI,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC/C,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;oBACxD,CAAC;oBAAA,CAAC;oBAEF,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;wBACzD,IAAI,CAAC,KAAK,EAAE,CAAC;wBACb,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;oBACvB,CAAC;gBACL,CAAC;gBAED,KAAK;oBACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBACpG,CAAC;YACL,CAAC;YAzCG;gBAAC,gBAAS,CAAC,YAAY,CAAC;;+DAAA;YAN5B;gBAAC,gBAAS,CAAC;oBACP,QAAQ,EAAE,cAAc;oBACxB,WAAW,EAAE,iCAAiC;oBAC9C,UAAU,EAAE,CAAC,gCAAgB,CAAC;iBACjC,CAAC;;oCAAA;YACF,uDA0CC,CAAA","file":"login-button.component.js","sourcesContent":["import { Component, ViewChild, OnInit } from '@angular/core';\nimport { MODAL_DIRECTIVES, ModalComponent } from 'ng2-bs3-modal/ng2-bs3-modal';\nimport { FormBuilder, Validators } from '@angular/common';\nimport {UserStoreService} from './user.service';\nimport {Observable} from 'rxjs/RX';\nimport {IUser} from './models/user';\n@Component({\n    selector: 'login-button',\n    templateUrl: 'app/login-button.component.html',\n    directives: [MODAL_DIRECTIVES]\n})\nexport class LoginButtonComponent implements OnInit {\n    @ViewChild('loginModal')\n    modal: ModalComponent;\n    submitted = false;\n    loginFormModel: any;\n    user$: Observable<IUser>;\n    user: IUser;\n\n    constructor(private _userService: UserStoreService, private _formBuilder: FormBuilder) {\n        this.loginFormModel = this._formBuilder.group({\n            'username': ['', Validators.required],\n            'password': ['', Validators.required]\n        });\n    }\n\n    ngOnInit() {\n        this.user$ = this._userService.user$;\n        this.user$.subscribe((data) => {\n            this.user = data;\n        })\n    }\n\n    close() {\n        this.modal.close();\n    }\n\n    onSubmit() {\n        this.loginFormModel.markAsDirty();\n        for (let control in this.loginFormModel.controls) {\n            this.loginFormModel.controls[control].markAsDirty();\n        };\n\n        if (this.loginFormModel.dirty && this.loginFormModel.valid) {\n            this.login();\n            this.modal.close();\n        }\n    }\n\n    login() {\n        this.submitted = true;\n        this._userService.login(this.loginFormModel.value.username, this.loginFormModel.value.password);\n    }\n}"],"sourceRoot":"/source/"}